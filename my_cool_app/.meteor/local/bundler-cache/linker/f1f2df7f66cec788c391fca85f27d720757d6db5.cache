[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// client/template.main.js                                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n                                                                     // 1\nTemplate.body.addContent((function() {                               // 2\n  var view = this;                                                   // 3\n  return HTML.DIV({                                                  // 4\n    \"class\": \"container\"                                             // 5\n  }, \"\\n  \", HTML.HEADER(\"\\n  \", HTML.Raw(\"<h1>Basic Chat Application</h1>\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.UL(\"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recentMessages\"));            // 7\n  }, function() {                                                    // 8\n    return [ \"\\n  \", HTML.LI(\"\\n  \", HTML.DIV({                      // 9\n      \"class\": \"username\"                                            // 10\n    }, Blaze.View(\"lookup:username\", function() {                    // 11\n      return Spacebars.mustache(view.lookup(\"username\"));            // 12\n    })), \"\\n  \", HTML.DIV({                                          // 13\n      \"class\": \"message\"                                             // 14\n    }, Blaze.View(\"lookup:message\", function() {                     // 15\n      return Spacebars.mustache(view.lookup(\"message\"));             // 16\n    })), \"\\n  \"), \"\\n  \" ];                                          // 17\n  }), \"\\n  \"), HTML.Raw('\\n  <footer>\\n\\n  <form class=\"new message\">\\n  <input type=\"text\" name=\"text\" placeholder=\"Add a message\">\\n  </form>\\n\\n  </footer>\\n\\n  '));\n}));                                                                 // 19\nMeteor.startup(Template.body.renderToDocument);                      // 20\n                                                                     // 21\n///////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// client/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nMessages = new Mongo.Collection(\"msgs\");                             // 1\n                                                                     //\nif (Meteor.isServer) {                                               // 3\n  //This code only runs on the server                                //\n  Meteor.publish(\"messages\", function () {                           // 5\n    return Messages.find({}, { sort: { createdAt: -1 }, limit: 5 });\n  });                                                                //\n}                                                                    //\n                                                                     //\nif (Meteor.isClient) {                                               // 11\n  //This code only runs on the client                                //\n  Meteor.subscribe(\"messages\");                                      // 13\n}                                                                    //\n                                                                     //\nMeteor.methods({                                                     // 16\n  sendMessage: function () {                                         // 17\n    function sendMessage(message) {                                  // 17\n      if (!Meteor.userId()) {                                        // 18\n        throw new Meteor.Error(\"not-authorized\");                    // 19\n      }                                                              //\n                                                                     //\n      Messages.insert({                                              // 22\n        text: message,                                               // 23\n        createdAt: new Date(),                                       // 24\n        username: Meteor.user().username                             // 25\n      });                                                            //\n    }                                                                //\n                                                                     //\n    return sendMessage;                                              //\n  }()                                                                //\n});                                                                  //\n                                                                     //\nif (Meteor.isClient) {                                               // 30\n  Template.body.helpers({                                            // 31\n    recentMessages: function () {                                    // 32\n      function recentMessages() {                                    // 32\n        return Messages.find({}, { sort: { createdAt: 1 } });        // 33\n      }                                                              //\n                                                                     //\n      return recentMessages;                                         //\n    }()                                                              //\n  });                                                                //\n                                                                     //\n  Template.body.events({                                             // 37\n    \"submit .new-message\": function () {                             // 38\n      function submitNewMessage(event) {                             // 38\n        var text = event.target.text.value;                          // 39\n                                                                     //\n        Meteor.call('sendMessage', text);                            // 41\n                                                                     //\n        event.target.text.value = \"\";                                // 43\n        return false;                                                // 44\n      }                                                              //\n                                                                     //\n      return submitNewMessage;                                       //\n    }()                                                              //\n  });                                                                //\n                                                                     //\n  Accounts.ui.config({                                               // 48\n    passwordSignupFields: \"USERNAME_ONLY\"                            // 49\n  });                                                                //\n}                                                                    //\n                                                                     //\n// import { Template } from 'meteor/templating';                     //\n// import { ReactiveVar } from 'meteor/reactive-var';                //\n                                                                     //\n// import './main.html';                                             //\n                                                                     //\n// Template.hello.onCreated(function helloOnCreated() {              //\n//   // counter starts at 0                                          //\n//   this.counter = new ReactiveVar(0);                              //\n// });                                                               //\n                                                                     //\n// Template.hello.helpers({                                          //\n//   counter() {                                                     //\n//     return Template.instance().counter.get();                     //\n//   },                                                              //\n// });                                                               //\n                                                                     //\n// Template.hello.events({                                           //\n//   'click button'(event, instance) {                               //\n//     // increment the counter when button is clicked               //\n//     instance.counter.set(instance.counter.get() + 1);             //\n//   },                                                              //\n// });                                                               //\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E;;;;;;;;;;;ACpBA,WAAW,IAAI,MAAM,UAAN,CAAiB,MAArB,CAAX;;AAEA,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,OAAP,CAAe,UAAf,EAA2B,YAAW;AACpC,WAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAC,CAAD,EAAlB,EAAuB,OAAO,CAAP,EAA1C,CAAP,CADoC;GAAX,CAA3B,CAFmB;CAArB;;AAQE,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,SAAP,CAAiB,UAAjB,EAFmB;CAArB;;AAKA,OAAO,OAAP,CAAe;AACb;AAAa,yBAAU,OAAV,EAAmB;AAC9B,UAAG,CAAE,OAAO,MAAP,EAAF,EAAmB;AACpB,cAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADoB;OAAtB;;AAIE,eAAS,MAAT,CAAgB;AACd,cAAM,OAAN;AACA,mBAAW,IAAI,IAAJ,EAAX;AACA,kBAAU,OAAO,IAAP,GAAc,QAAd;OAHZ,EAL4B;KAAnB;;;KAAb;CADF;;AAcA,IAAI,OAAO,QAAP,EAAiB;AACnB,WAAS,IAAT,CAAc,OAAd,CAAsB;AACpB;AAAgB,gCAAY;AAC1B,eAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAX,EAAP,EAAnB,CAAP,CAD0B;OAAZ;;;OAAhB;GADF,EADmB;;AAOrB,WAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;AAAuB,gCAAU,KAAV,EAAiB;AACtC,YAAI,OAAO,MAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,CAD2B;;AAGtC,eAAO,IAAP,CAAY,aAAZ,EAA2B,IAA3B,EAHsC;;AAKtC,cAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,GAA0B,EAA1B,CALsC;AAMtC,eAAO,KAAP,CANsC;OAAjB;;;OAAvB;GADF,EAPqB;;AAkBrB,WAAS,EAAT,CAAY,MAAZ,CAAmB;AACjB,0BAAsB,eAAtB;GADF,EAlBqB;CAArB","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n  \", HTML.HEADER(\"\\n  \", HTML.Raw(\"<h1>Basic Chat Application</h1>\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.UL(\"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recentMessages\"));\n  }, function() {\n    return [ \"\\n  \", HTML.LI(\"\\n  \", HTML.DIV({\n      \"class\": \"username\"\n    }, Blaze.View(\"lookup:username\", function() {\n      return Spacebars.mustache(view.lookup(\"username\"));\n    })), \"\\n  \", HTML.DIV({\n      \"class\": \"message\"\n    }, Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    })), \"\\n  \"), \"\\n  \" ];\n  }), \"\\n  \"), HTML.Raw('\\n  <footer>\\n\\n  <form class=\"new message\">\\n  <input type=\"text\" name=\"text\" placeholder=\"Add a message\">\\n  </form>\\n\\n  </footer>\\n\\n  '));\n}));\nMeteor.startup(Template.body.renderToDocument);\n","Messages = new Mongo.Collection(\"msgs\");\n\nif (Meteor.isServer) {\n  //This code only runs on the server\n  Meteor.publish(\"messages\", function() {\n    return Messages.find({}, {sort: {createdAt: -1}, limit: 5});\n  });\n  }\n\n\n  if (Meteor.isClient) {\n    //This code only runs on the client\n    Meteor.subscribe(\"messages\");\n  }\n\n  Meteor.methods({\n    sendMessage: function (message) {\n      if(! Meteor.userId()) {\n        throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Messages.insert({\n          text: message,\n          createdAt: new Date(),\n          username: Meteor.user().username\n        });\n      }\n  });\n\n  if (Meteor.isClient) {\n    Template.body.helpers({\n      recentMessages: function () {\n        return Messages.find({}, {sort: {createdAt: 1}});\n      }\n    });\n\n  Template.body.events({\n    \"submit .new-message\": function (event) {\n      var text = event.target.text.value;\n\n      Meteor.call('sendMessage', text);\n\n      event.target.text.value = \"\";\n      return false;\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Template } from 'meteor/templating';\n// import { ReactiveVar } from 'meteor/reactive-var';\n\n// import './main.html';\n\n// Template.hello.onCreated(function helloOnCreated() {\n//   // counter starts at 0\n//   this.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n//   counter() {\n//     return Template.instance().counter.get();\n//   },\n// });\n\n// Template.hello.events({\n//   'click button'(event, instance) {\n//     // increment the counter when button is clicked\n//     instance.counter.set(instance.counter.get() + 1);\n//   },\n// });\n"]}}]