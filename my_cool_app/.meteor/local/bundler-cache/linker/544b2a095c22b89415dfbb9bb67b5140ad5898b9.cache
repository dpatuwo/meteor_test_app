[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                           //\n// client/template.main.js                                                                   //\n//                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                             //\n                                                                                             // 1\nTemplate.body.addContent((function() {                                                       // 2\n  var view = this;                                                                           // 3\n  return HTML.DIV({                                                                          // 4\n    \"class\": \"container\"                                                                     // 5\n  }, \"\\n  \", HTML.HEADER(\"\\n  \", HTML.Raw(\"<h1>Basic Chat Application</h1>\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.UL(\"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recentMessages\"));                                    // 7\n  }, function() {                                                                            // 8\n    return [ \"\\n  \", HTML.Comment(\" handle bar syntax \"), \"\\n  \", HTML.LI(\"\\n  \", HTML.DIV({\n      \"class\": \"username\"                                                                    // 10\n    }, Blaze.View(\"lookup:username\", function() {                                            // 11\n      return Spacebars.mustache(view.lookup(\"username\"));                                    // 12\n    })), \"\\n  \", HTML.DIV({                                                                  // 13\n      \"class\": \"message\"                                                                     // 14\n    }, Blaze.View(\"lookup:message\", function() {                                             // 15\n      return Spacebars.mustache(view.lookup(\"message\"));                                     // 16\n    })), \"\\n  \"), \"\\n  \" ];                                                                  // 17\n  }), \"\\n  \"), \"\\n  \", HTML.FOOTER(\"\\n  \", Blaze.If(function() {                             // 18\n    return Spacebars.call(view.lookup(\"currentUser\"));                                       // 19\n  }, function() {                                                                            // 20\n    return [ \"\\n\\n  \", HTML.FORM({                                                           // 21\n      \"class\": \"new message\"                                                                 // 22\n    }, \"\\n  \", HTML.INPUT({                                                                  // 23\n      type: \"text\",                                                                          // 24\n      name: \"text\",                                                                          // 25\n      placeholder: \"Add a message\"                                                           // 26\n    }), \"\\n  \"), \"\\n\\n  \" ];                                                                 // 27\n  }), \"\\n  \"), \"\\n\\n  \");                                                                    // 28\n}));                                                                                         // 29\nMeteor.startup(Template.body.renderToDocument);                                              // 30\n                                                                                             // 31\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                           //\n// client/main.js                                                                            //\n//                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                             //\nMessages = new Mongo.Collection(\"msgs\");                                                     // 1\n// This code runs on both client and server                                                  //\n                                                                                             //\nif (Meteor.isServer) {                                                                       // 4\n  // This code only runs on the server                                                       //\n  Meteor.publish(\"messages\", function () {                                                   // 6\n    return Messages.find({}, { sort: { createdAt: -1 }, limit: 5 });                         // 7\n  });                                                                                        //\n}                                                                                            //\n                                                                                             //\nif (Meteor.isClient) {                                                                       // 12\n  // This code only runs on the client                                                       //\n  Meteor.subscribe(\"messages\");                                                              // 14\n}                                                                                            //\n                                                                                             //\nMeteor.methods({                                                                             // 17\n  sendMessage: function () {                                                                 // 18\n    function sendMessage(message) {                                                          // 18\n      if (!Meteor.userId()) {                                                                // 19\n        throw new Meteor.Error(\"not-authorized\");                                            // 20\n      }                                                                                      //\n                                                                                             //\n      Messages.insert({                                                                      // 23\n        text: message,                                                                       // 24\n        createdAt: new Date(),                                                               // 25\n        username: Meteor.user().username                                                     // 26\n      });                                                                                    //\n    }                                                                                        //\n                                                                                             //\n    return sendMessage;                                                                      //\n  }()                                                                                        //\n});                                                                                          //\n                                                                                             //\nif (Meteor.isClient) {                                                                       // 31\n  Template.body.helpers({                                                                    // 32\n    recentMessages: function () {                                                            // 33\n      function recentMessages() {                                                            // 33\n        return Messages.find({}, { sort: { createdAt: 1 } });                                // 34\n      }                                                                                      //\n                                                                                             //\n      return recentMessages;                                                                 //\n    }()                                                                                      //\n  });                                                                                        //\n                                                                                             //\n  Template.body.events({                                                                     // 38\n    \"submit .new-message\": function () {                                                     // 39\n      function submitNewMessage(event) {                                                     // 39\n        var text = event.target.text.value;                                                  // 40\n                                                                                             //\n        Meteor.call('sendMessage', text);                                                    // 42\n                                                                                             //\n        event.target.text.value = \"\";                                                        // 44\n        return false;                                                                        // 45\n      }                                                                                      //\n                                                                                             //\n      return submitNewMessage;                                                               //\n    }()                                                                                      //\n  });                                                                                        //\n                                                                                             //\n  Accounts.ui.config({                                                                       // 49\n    passwordSignupFields: \"USERNAME_ONLY\"                                                    // 50\n  });                                                                                        //\n}                                                                                            //\n                                                                                             //\n// code taken from \"An Introduction to Meteor\" video:                                        //\n// https://www.youtube.com/watch?v=dOCMpoeuwTI                                               //\n                                                                                             //\n// import { Template } from 'meteor/templating';                                             //\n// import { ReactiveVar } from 'meteor/reactive-var';                                        //\n                                                                                             //\n// import './main.html';                                                                     //\n                                                                                             //\n// Template.hello.onCreated(function helloOnCreated() {                                      //\n//   // counter starts at 0                                                                  //\n//   this.counter = new ReactiveVar(0);                                                      //\n// });                                                                                       //\n                                                                                             //\n// Template.hello.helpers({                                                                  //\n//   counter() {                                                                             //\n//     return Template.instance().counter.get();                                             //\n//   },                                                                                      //\n// });                                                                                       //\n                                                                                             //\n// Template.hello.events({                                                                   //\n//   'click button'(event, instance) {                                                       //\n//     // increment the counter when button is clicked                                       //\n//     instance.counter.set(instance.counter.get() + 1);                                     //\n//   },                                                                                      //\n// });                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kG;;;;;;;;;;;AC9BA,WAAW,IAAI,MAAM,UAAN,CAAiB,MAArB,CAAX;;;AAGA,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,OAAP,CAAe,UAAf,EAA2B,YAAW;AACpC,WAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAC,CAAD,EAAlB,EAAuB,OAAO,CAAP,EAA1C,CAAP,CADoC;GAAX,CAA3B,CAFmB;CAArB;;AAQE,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,SAAP,CAAiB,UAAjB,EAFmB;CAArB;;AAKA,OAAO,OAAP,CAAe;AACb;AAAa,yBAAU,OAAV,EAAmB;AAC9B,UAAG,CAAE,OAAO,MAAP,EAAF,EAAmB;AACpB,cAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADoB;OAAtB;;AAIE,eAAS,MAAT,CAAgB;AACd,cAAM,OAAN;AACA,mBAAW,IAAI,IAAJ,EAAX;AACA,kBAAU,OAAO,IAAP,GAAc,QAAd;OAHZ,EAL4B;KAAnB;;;KAAb;CADF;;AAcA,IAAI,OAAO,QAAP,EAAiB;AACnB,WAAS,IAAT,CAAc,OAAd,CAAsB;AACpB;AAAgB,gCAAY;AAC1B,eAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAX,EAAP,EAAnB,CAAP,CAD0B;OAAZ;;;OAAhB;GADF,EADmB;;AAOrB,WAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;AAAuB,gCAAU,KAAV,EAAiB;AACtC,YAAI,OAAO,MAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,CAD2B;;AAGtC,eAAO,IAAP,CAAY,aAAZ,EAA2B,IAA3B,EAHsC;;AAKtC,cAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,GAA0B,EAA1B,CALsC;AAMtC,eAAO,KAAP,CANsC;OAAjB;;;OAAvB;GADF,EAPqB;;AAkBrB,WAAS,EAAT,CAAY,MAAZ,CAAmB;AACjB,0BAAsB,eAAtB;GADF,EAlBqB;CAArB","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n  \", HTML.HEADER(\"\\n  \", HTML.Raw(\"<h1>Basic Chat Application</h1>\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.UL(\"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recentMessages\"));\n  }, function() {\n    return [ \"\\n  \", HTML.Comment(\" handle bar syntax \"), \"\\n  \", HTML.LI(\"\\n  \", HTML.DIV({\n      \"class\": \"username\"\n    }, Blaze.View(\"lookup:username\", function() {\n      return Spacebars.mustache(view.lookup(\"username\"));\n    })), \"\\n  \", HTML.DIV({\n      \"class\": \"message\"\n    }, Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    })), \"\\n  \"), \"\\n  \" ];\n  }), \"\\n  \"), \"\\n  \", HTML.FOOTER(\"\\n  \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n\\n  \", HTML.FORM({\n      \"class\": \"new message\"\n    }, \"\\n  \", HTML.INPUT({\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Add a message\"\n    }), \"\\n  \"), \"\\n\\n  \" ];\n  }), \"\\n  \"), \"\\n\\n  \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n","Messages = new Mongo.Collection(\"msgs\");\n// This code runs on both client and server\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish(\"messages\", function() {\n    return Messages.find({}, {sort: {createdAt: -1}, limit: 5});\n  });\n  }\n\n\n  if (Meteor.isClient) {\n    // This code only runs on the client\n    Meteor.subscribe(\"messages\");\n  }\n\n  Meteor.methods({\n    sendMessage: function (message) {\n      if(! Meteor.userId()) {\n        throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Messages.insert({\n          text: message,\n          createdAt: new Date(),\n          username: Meteor.user().username\n        });\n      }\n  });\n\n  if (Meteor.isClient) {\n    Template.body.helpers({\n      recentMessages: function () {\n        return Messages.find({}, {sort: {createdAt: 1}});\n      }\n    });\n\n  Template.body.events({\n    \"submit .new-message\": function (event) {\n      var text = event.target.text.value;\n\n      Meteor.call('sendMessage', text);\n\n      event.target.text.value = \"\";\n      return false;\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n\n}\n\n\n// code taken from \"An Introduction to Meteor\" video:\n// https://www.youtube.com/watch?v=dOCMpoeuwTI\n\n\n\n\n// import { Template } from 'meteor/templating';\n// import { ReactiveVar } from 'meteor/reactive-var';\n\n// import './main.html';\n\n// Template.hello.onCreated(function helloOnCreated() {\n//   // counter starts at 0\n//   this.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n//   counter() {\n//     return Template.instance().counter.get();\n//   },\n// });\n\n// Template.hello.events({\n//   'click button'(event, instance) {\n//     // increment the counter when button is clicked\n//     instance.counter.set(instance.counter.get() + 1);\n//   },\n// });\n"]}}]