{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"Messages = new Mongo.Collection(\"msgs\");\n// This code runs on both client (mini Mongo, Meteor's client-side cache; mini Mongo will keep a subset of the data that's on the server) and server (Production Mongo db database)\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish(\"messages\", function () {\n    return Messages.find({}, { sort: { createdAt: -1 }, limit: 5 });\n  });\n}\n\nif (Meteor.isClient) {\n  // This code only runs on the client\n  Meteor.subscribe(\"messages\");\n}\n\nMeteor.methods({\n  sendMessage: function () {\n    function sendMessage(message) {\n      if (!Meteor.userId()) {\n        throw new Meteor.Error(\"not-authorized\");\n      }\n\n      Messages.insert({\n        text: message,\n        createdAt: new Date(),\n        username: Meteor.user().username\n      });\n    }\n\n    return sendMessage;\n  }()\n});\n\nif (Meteor.isClient) {\n  Template.body.helpers({\n    recentMessages: function () {\n      function recentMessages() {\n        return Messages.find({}, { sort: { createdAt: 1 } });\n      }\n\n      return recentMessages;\n    }()\n  });\n\n  Template.body.events({\n    \"submit .new-message\": function () {\n      function submitNewMessage(event) {\n        var text = event.target.text.value;\n\n        Meteor.call('sendMessage', text);\n\n        event.target.text.value = \"\";\n        return false;\n      }\n\n      return submitNewMessage;\n    }()\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n}\n\n// code taken from \"An Introduction to Meteor\" video:\n// https://www.youtube.com/watch?v=dOCMpoeuwTI\n\n// import { Template } from 'meteor/templating';\n// import { ReactiveVar } from 'meteor/reactive-var';\n\n// import './main.html';\n\n// Template.hello.onCreated(function helloOnCreated() {\n//   // counter starts at 0\n//   this.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n//   counter() {\n//     return Template.instance().counter.get();\n//   },\n// });\n\n// Template.hello.events({\n//   'click button'(event, instance) {\n//     // increment the counter when button is clicked\n//     instance.counter.set(instance.counter.get() + 1);\n//   },\n// });","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"AAAA,WAAW,IAAI,MAAM,UAAN,CAAiB,MAArB,CAAX;;;AAGA,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,OAAP,CAAe,UAAf,EAA2B,YAAW;AACpC,WAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAC,CAAD,EAAlB,EAAuB,OAAO,CAAP,EAA1C,CAAP,CADoC;GAAX,CAA3B,CAFmB;CAArB;;AAQE,IAAI,OAAO,QAAP,EAAiB;;AAEnB,SAAO,SAAP,CAAiB,UAAjB,EAFmB;CAArB;;AAKA,OAAO,OAAP,CAAe;AACb;AAAa,yBAAU,OAAV,EAAmB;AAC9B,UAAG,CAAE,OAAO,MAAP,EAAF,EAAmB;AACpB,cAAM,IAAI,OAAO,KAAP,CAAa,gBAAjB,CAAN,CADoB;OAAtB;;AAIE,eAAS,MAAT,CAAgB;AACd,cAAM,OAAN;AACA,mBAAW,IAAI,IAAJ,EAAX;AACA,kBAAU,OAAO,IAAP,GAAc,QAAd;OAHZ,EAL4B;KAAnB;;;KAAb;CADF;;AAcA,IAAI,OAAO,QAAP,EAAiB;AACnB,WAAS,IAAT,CAAc,OAAd,CAAsB;AACpB;AAAgB,gCAAY;AAC1B,eAAO,SAAS,IAAT,CAAc,EAAd,EAAkB,EAAC,MAAM,EAAC,WAAW,CAAX,EAAP,EAAnB,CAAP,CAD0B;OAAZ;;;OAAhB;GADF,EADmB;;AAOrB,WAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;AAAuB,gCAAU,KAAV,EAAiB;AACtC,YAAI,OAAO,MAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,CAD2B;;AAGtC,eAAO,IAAP,CAAY,aAAZ,EAA2B,IAA3B,EAHsC;;AAKtC,cAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,GAA0B,EAA1B,CALsC;AAMtC,eAAO,KAAP,CANsC;OAAjB;;;OAAvB;GADF,EAPqB;;AAkBrB,WAAS,EAAT,CAAY,MAAZ,CAAmB;AACjB,0BAAsB,eAAtB;GADF,EAlBqB;CAArB","file":"/client/main.js.map","sourcesContent":["Messages = new Mongo.Collection(\"msgs\");\n// This code runs on both client (mini Mongo, Meteor's client-side cache; mini Mongo will keep a subset of the data that's on the server) and server (Production Mongo db database)\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish(\"messages\", function() {\n    return Messages.find({}, {sort: {createdAt: -1}, limit: 5});\n  });\n  }\n\n\n  if (Meteor.isClient) {\n    // This code only runs on the client\n    Meteor.subscribe(\"messages\");\n  }\n\n  Meteor.methods({\n    sendMessage: function (message) {\n      if(! Meteor.userId()) {\n        throw new Meteor.Error(\"not-authorized\");\n        }\n\n        Messages.insert({\n          text: message,\n          createdAt: new Date(),\n          username: Meteor.user().username\n        });\n      }\n  });\n\n  if (Meteor.isClient) {\n    Template.body.helpers({\n      recentMessages: function () {\n        return Messages.find({}, {sort: {createdAt: 1}});\n      }\n    });\n\n  Template.body.events({\n    \"submit .new-message\": function (event) {\n      var text = event.target.text.value;\n\n      Meteor.call('sendMessage', text);\n\n      event.target.text.value = \"\";\n      return false;\n    }\n  });\n\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n\n}\n\n\n// code taken from \"An Introduction to Meteor\" video:\n// https://www.youtube.com/watch?v=dOCMpoeuwTI\n\n\n\n\n// import { Template } from 'meteor/templating';\n// import { ReactiveVar } from 'meteor/reactive-var';\n\n// import './main.html';\n\n// Template.hello.onCreated(function helloOnCreated() {\n//   // counter starts at 0\n//   this.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n//   counter() {\n//     return Template.instance().counter.get();\n//   },\n// });\n\n// Template.hello.events({\n//   'click button'(event, instance) {\n//     // increment the counter when button is clicked\n//     instance.counter.set(instance.counter.get() + 1);\n//   },\n// });\n"]},"hash":"272be875a43e6d42d123dbd43345ec7b93ed1311"}
